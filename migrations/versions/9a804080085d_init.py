"""init

Revision ID: 9a804080085d
Revises: 
Create Date: 2025-06-28 01:37:50.211412

"""
from typing import Sequence, Union

from sqlmodel import SQLModel, Session
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9a804080085d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job',
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('resource_requirements', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('retry_config', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('timeout_seconds', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('job_id')
    )
    op.create_index(op.f('ix_job_job_id'), 'job', ['job_id'], unique=False)
    op.create_index(op.f('ix_job_priority'), 'job', ['priority'], unique=False)
    op.create_index(op.f('ix_job_status'), 'job', ['status'], unique=False)
    op.create_index(op.f('ix_job_type'), 'job', ['type'], unique=False)
    op.create_table('jobdep',
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('depends_on_job_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['depends_on_job_id'], ['job.job_id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['job.job_id'], ),
    sa.PrimaryKeyConstraint('job_id', 'depends_on_job_id')
    )
    op.create_table('joblog',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Uuid(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('log_level', SQLModel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message', SQLModel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['job.job_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_joblog_job_id'), 'joblog', ['job_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_joblog_job_id'), table_name='joblog')
    op.drop_table('joblog')
    op.drop_table('jobdep')
    op.drop_index(op.f('ix_job_type'), table_name='job')
    op.drop_index(op.f('ix_job_status'), table_name='job')
    op.drop_index(op.f('ix_job_priority'), table_name='job')
    op.drop_index(op.f('ix_job_job_id'), table_name='job')
    op.drop_table('job')
    # ### end Alembic commands ###
